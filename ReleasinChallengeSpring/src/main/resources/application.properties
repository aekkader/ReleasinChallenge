# DB_JDBC_URL=jdbc:postgresql://localhost:5434/releasin_challenge
# spring.datasource.url=jdbc:mysql://localhost:3306/testdb?createDatabaseIfNotExist=true&useSSL=false
DB_JDBC_URL=jdbc:postgresql://localhost:5434/releasin_challenge

DB_JDBC_USER=postgres
DB_JDBC_PASSWORD=pgsql13
# PORT=8080

# quarkus.http.host=0.0.0.0
# quarkus.http.cors=true
# quarkus.http.cors.origins=*

# ===============================
# DATABASE : connection properties
# ===============================
spring.datasource.url=${DB_JDBC_URL}
#?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=${DB_JDBC_USER}
spring.datasource.password=${DB_JDBC_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# spring.jpa.defer-datasource-initialization=true

# ===============================
# JPA / HIBERNATE
# ===============================
# Log JPA queries
# Comment this in production
# spring.jpa.show-sql=true
spring.jpa.show-sql=true

# Drop and create new tables (create, create-drop, validate, update)
# Only for testing purpose - comment this in production
spring.jpa.hibernate.ddl-auto=update
# The values create, create-drop, validate, and update
# spring.jpa.hibernate.ddl-auto= 
# DDL mode. This is actually a shortcut for the 
# "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" 
# when using an embedded database 
# and no schema manager was detected. 
# Otherwise, defaults to "none".

# Hibernate SQL dialect
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
# spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# # Fix Postgres JPA Error:
# # Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false